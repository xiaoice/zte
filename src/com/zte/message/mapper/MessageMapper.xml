<?xml version="1.0" encoding="UTF-8" ?> 
    <!DOCTYPE mapper 
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zte.message.mapper.MessageMapper">
	
	<insert id="insert" parameterType="com.zte.message.domain.Message" useGeneratedKeys="true" keyProperty="id">
		insert into message(sendReceiveGroup,content,sendUsername,ip,createBy,createTime) values
				(#{sendReceiveGroup},#{content},#{sendUsername},#{ip},#{createBy},now())
    </insert>
    
	<select id="getById" resultType="com.zte.message.domain.Message" parameterType="int">
		select * from message where id=#{id} 
    </select>
    
    <update id="update" parameterType="com.zte.message.domain.Message">
    	update message set age=#{age}
    </update>
    
    <delete id="deleteById" parameterType="int" >
    	delete from message where id=#{id}
    </delete>
    
    <!-- 获取未读的新消息列表 -->
	<select id="getMessageList" resultType="com.zte.message.domain.Message" parameterType="hashMap">
		select * from message where sendReceiveGroup=#{sendReceiveGroup} and isRead=0 and isDel=0 
    </select>
    
    <select id="getMessageCount" resultType="int" parameterType="hashMap">
		select count(1) from message where sendReceiveGroup=#{sendReceiveGroup} and isRead=#{isRead} and isDel=0
    </select>
    
    <!-- 分页获取消息列表 -->
    <select id="findMessageListByPage" resultType="hashMap" parameterType="hashMap">
		select * from message where sendReceiveGroup=#{sendReceiveGroup} and isRead=#{isRead} and isDel=0 
		order by createTime desc limit #{startNum},#{endNum}
    </select>
    
    <!-- 将消息置为已读 -->
    <update id="updateMessageIsRead" parameterType="hashMap">
    	update message set isRead=1 where sendReceiveGroup=#{sendReceiveGroup} and id in(${ids})
    </update>

	<!-- 当使用该Mybatis与Spring整合的时候，该文件必须和相应的Mapper接口文件同名，并在同一路径下 -->
</mapper> 